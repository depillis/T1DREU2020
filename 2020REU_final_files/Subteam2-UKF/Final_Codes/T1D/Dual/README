This folder contains code to run the Dual UKF on the T1D model using Li data. Additionally, it includes files to produce many of the figures seen in the final writeup. There are a variety of files for various purposes, split up into categories below:


*****PRODUCING FITS TO EVERY MOUSE USING THE DUAL UKF***************
To produce best fits for every mouse using the 5 iterations approach, use Main_Get_Best_Params_Individual.m. Note that to run this file to completion as is, meaning that all 11 datasets are parametrized, 
the run time is very long, on the order of 9 hours. This file can be modified to do fits to individual mice if needed. Additionally, current results from this file are already saved in this folder, meaning that all
files related to figure creation can still be run WITHOUT having to run Main_Get_Best_Params_Individual.m first. The files that are needed to be RUN to get this are:

- Main_Get_Best_Params_Individual - this is the main file that should be run to get the best parameter sets for each mouse based on the dual UKF. Please note that this file takes a very significant amount of time to run to completion (approx 6 hours) so modifications can be made to run on only certain mice or for less iterations (current default is 5)

********************************************************************

******PRODUCING FIGURES/VALUES ONLY ABOUT THE DUAL UKF*********************
To see the quality of fits that we get from using the Dual UKF the following scripts can be used:

- Acute_Fits - run to produce figure showing the Dual fits for all the acute mice
- Progressive_Fits - run to produce figure showing the Dual fits on the progressive mice
- calculateMSEAllMice - prints out MSE values for all mice based on fits with parameter values determined by csv file which is specified in the script


To see the state simulations using the Dual UKF parameters from Mouse 6 against the baseline the following is used:

-States_Simulation_Plots - run to produce figure showing the simulated states for the key parameters chosen in paper.
-States_Simulation_Plots_ALL - run to produce figure of all 12 states (can be manipulated to be with or without wave)

To see analysis of parameter movement from running the Dual UKF on all mice the follwing can be used:
-Param_Distributions_GivenCSV - Script to produce histograms of key parameters and to fit normal distributions to those parameters 
-Parameter_BoxPlots - run to produce box plots for key parameters
-ParamChange - can be used to calculate change in parameter values from starting point

**********************************************************************


********USE AVERAGED DATA******************************************
Experimentation was also done using the averaged Li dataset created by subteam 1. To run this version of algorithm (results are already in this folder but this is in case a rerun is needed) use the following:

- Run_On_Li_Avg - code to run Dual UKF on the Li averaged dataset

*******************************************************************


******MISCELLANEOUS********
- AcutevsProgressiveFigure - produce figure that shows difference in shape between acute and progressive mice.
***************************


********HELPER FUNCTIONS******************************************
The remainder of the .m files are helper functions, mostly used by Main_Get_Best_Params_Individual.m to actually perform the parameter estimation. In particular, they are:

- determineError - function to calculate Least Squares error for a glucose fit
- fig_2_3_4_5_ODE/Joint - these two files describe the ODE system first for the Dual UKF and then for the Joint UKF (slight change in how eta is treated between the two)
- fig_2_3_4_5_Parameters - script called to load model parameter values that are constant and not being estimated (wave strength for example)
- MeasurementFcn and MeasurementFcn2 - measurement function matrices for the Dual
- UKF_Params - Function to perform a SINGLE iteration of the parameter UKF
- UKF - Function to perform a SINGLE iteration of the states UKF

*************************************************************






 








